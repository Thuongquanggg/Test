
// üÖæÔ∏è T√™n file: ghost (js)
// M√£ K·ªãch B·∫£n N√¢ng C·∫•p: ‚ÄúGhost in the Machine‚Äù
// M·ª•c ti√™u: V∆∞·ª£t qua c√°c l·ªõp ph√≤ng th·ªß c∆° b·∫£n c·ªßa WAF, ki·ªÉm tra s√¢u logic ·ª©ng d·ª•ng.

import http from 'k6/http';
import { check, group, sleep } from 'k6';
import { html } from 'k6/html';
import { SharedArray } from 'k6/data';

// --- C·∫§U H√åNH CH√çNH ---
const BASE_URL = 'https://nezushub.vip'; // Thay b·∫±ng trang c·ªßa b·∫°n

// --- B·ªÇ D·ªÆ LI·ªÜU N√ÇNG CAO ---

// 1. D·ªØ li·ªáu ng∆∞·ªùi d√πng ƒë·ªÉ ƒëƒÉng nh·∫≠p (ƒë·ªçc t·ª´ file JSON)
// M·ªói VU s·∫Ω l·∫•y m·ªôt user kh√°c nhau ƒë·ªÉ ƒëƒÉng nh·∫≠p.
const users = new SharedArray('users', function () {
  // Gi·∫£ s·ª≠ b·∫°n c√≥ file data/users.json v·ªõi ƒë·ªãnh d·∫°ng:
  // [ { "username": "user1@test.com", "password": "password1" }, ... ]
  // ƒê·ªÉ ch·∫°y, t·∫°o th∆∞ m·ª•c 'data' v√† file 'users.json' b√™n trong.
  // N·∫øu kh√¥ng c√≥ file, tr·∫£ v·ªÅ m·∫£ng r·ªóng ƒë·ªÉ kh√¥ng b·ªã l·ªói.
  try {
    return JSON.parse(open('./data/users.json'));
  } catch (e) {
    return [];
  }
});

// 2. B·ªÉ User-Agents v√† Headers ph·ª©c t·∫°p h∆°n
// Bao g·ªìm c·∫£ c√°c header Client-Hints (Sec-CH-UA) m√† tr√¨nh duy·ªát Chrome g·ª≠i.
const BROWSER_PROFILES = [
  {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'Accept-Language': 'en-US,en;q=0.9,vi;q=0.8',
    'Sec-CH-UA': '"Not.A/Brand";v="8", "Chromium";v="114", "Google Chrome";v="114"',
    'Sec-CH-UA-Mobile': '?0',
    'Sec-CH-UA-Platform': '"Windows"',
  },
  {
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Firefox/115.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'fr-FR,fr;q=0.8,en-US;q=0.5,en;q=0.3',
  }
];

// --- C·∫§U H√åNH K·ªäCH B·∫¢N TEST (SCENARIOS) ---
export const options = {
  scenarios: {
    // K·ªãch b·∫£n 1: Kh√°ch v√£ng lai, ch·ªâ xem, kh√¥ng t∆∞∆°ng t√°c s√¢u.
    // Chi·∫øm 60% t·ªïng s·ªë VUs.
    guest_browsing: {
      executor: 'ramping-vus',
      startVUs: 0,
      stages: [
        { duration: '5m', target: 12 }, // 60% c·ªßa 20
        { duration: '15m', target: 60 }, // 60% c·ªßa 100
        { duration: '30m', target: 60 },
        { duration: '10m', target: 12 },
        { duration: '3m', target: 0 },
      ],
      exec: 'guestBehavior', // Ch·∫°y h√†m guestBehavior
    },
    // K·ªãch b·∫£n 2: Ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p, th·ª±c hi·ªán c√°c t√°c v·ª• quan tr·ªçng.
    // Chi·∫øm 40% t·ªïng s·ªë VUs.
    authenticated_user: {
      executor: 'ramping-vus',
      startVUs: 0,
      stages: [
        { duration: '5m', target: 8 }, // 40% c·ªßa 20
        { duration: '15m', target: 40 }, // 40% c·ªßa 100
        { duration: '30m', target: 40 },
        { duration: '10m', target: 8 },
        { duration: '3m', target: 0 },
      ],
      exec: 'authenticatedBehavior', // Ch·∫°y h√†m authenticatedBehavior
    },
  },
  thresholds: {
    'http_req_duration': ['p(95)<2500'],
    'http_req_failed': ['rate<0.02'], // Y√™u c·∫ßu kh·∫Øt khe h∆°n
    'checks': ['rate>0.98'],
  },
  discardResponseBodies: false,
};

// --- C√ÅC H√ÄNH VI CH√çNH ---

// H√†nh vi c·ªßa kh√°ch v√£ng lai
export function guestBehavior() {
  const params = getBaseParams();
  group('H√†nh vi: Kh√°ch v√£ng lai', function () {
    // T·∫£i trang ch·ªß
    const res = http.get(BASE_URL, { ...params, tags: { type: 'html' } });
    check(res, { 'Trang ch·ªß OK': (r) => r.status === 200 });
    
    // T√¨m ki·∫øm m·ªôt s·∫£n ph·∫©m ng·∫´u nhi√™n
    const searchTerms = ['apple', 'iphone 14', 'macbook pro', 'watch ultra'];
    const term = searchTerms[Math.floor(Math.random() * searchTerms.length)];
    
    const searchRes = http.get(`${BASE_URL}/search?q=${encodeURIComponent(term)}`, { ...params, tags: { type: 'html' } });
    check(searchRes, { 'Trang t√¨m ki·∫øm OK': (r) => r.status === 200 });
  });
  sleep(Math.random() * 5 + 5); // 5-10 gi√¢y
}

// H√†nh vi c·ªßa ng∆∞·ªùi d√πng ƒë√£ x√°c th·ª±c
export function authenticatedBehavior() {
  // M·ªói VU l√† m·ªôt ng∆∞·ªùi d√πng kh√°c nhau, c√≥ cookie jar ri√™ng.
  const user = users[__VU % users.length];
  if (!user) {
    // N·∫øu kh√¥ng c√≥ user data, th√¨ ho·∫°t ƒë·ªông nh∆∞ kh√°ch
    guestBehavior();
    return;
  }
  
  const params = getBaseParams();

  group('H√†nh vi: Ng∆∞·ªùi d√πng x√°c th·ª±c', function () {
    // B∆∞·ªõc 1: ƒêƒÉng nh·∫≠p
    const loggedIn = login(user.username, user.password, params);

    if (loggedIn) {
      // B∆∞·ªõc 2: Th·ª±c hi·ªán h√†nh ƒë·ªông y√™u c·∫ßu x√°c th·ª±c, v√≠ d·ª•: xem trang c√° nh√¢n
      const profileRes = http.get(`${BASE_URL}/my-account`, { ...params, tags: { type: 'html' } });
      check(profileRes, { 'Xem trang c√° nh√¢n OK': (r) => r.status === 200 && r.body.includes(user.username) });

      // B∆∞·ªõc 3: G·ªçi m·ªôt API n·ªôi b·ªô, v√≠ d·ª•: l·∫•y danh s√°ch ƒë∆°n h√†ng
      const apiRes = http.get(`${BASE_URL}/api/v1/orders`, { ...params, tags: { type: 'api' } });
      check(apiRes, { 'API l·∫•y ƒë∆°n h√†ng OK': (r) => r.status === 200 });
    }
  });

  sleep(Math.random() * 8 + 7); // 7-15 gi√¢y, ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p th∆∞·ªùng ·ªü l·∫°i l√¢u h∆°n.
}

// --- C√ÅC H√ÄM H·ªñ TR·ª¢ ---

// H√†m ƒëƒÉng nh·∫≠p, l·∫•y CSRF token v√† tr·∫£ v·ªÅ true/false
function login(username, password, params) {
  let csrfToken = '';
  
  // 1. T·∫£i trang ƒëƒÉng nh·∫≠p ƒë·ªÉ l·∫•y CSRF token t·ª´ form
  const loginPageRes = http.get(`${BASE_URL}/login`, params);
  if (loginPageRes.status === 200) {
    const doc = html.parse(loginPageRes.body);
    // Gi·∫£ s·ª≠ token n·∫±m trong input c√≥ name="_csrf"
    csrfToken = doc.find('input[name="_csrf"]').attr('value');
  }
  check(loginPageRes, { 'T·∫£i trang ƒëƒÉng nh·∫≠p OK': (r) => r.status === 200 && csrfToken !== '' });

  if (!csrfToken) return false;

  // 2. G·ª≠i request POST ƒë·ªÉ ƒëƒÉng nh·∫≠p
  // k6 s·∫Ω t·ª± ƒë·ªông qu·∫£n l√Ω cookie session nh·ªù c√≥ cookie jar t√≠ch h·ª£p.
  const loginPayload = {
    username: username,
    password: password,
    _csrf: csrfToken,
  };
  
  const loginRes = http.post(`${BASE_URL}/login`, loginPayload, params);
  const loggedInSuccess = check(loginRes, {
    'ƒêƒÉng nh·∫≠p th√†nh c√¥ng (redirect)': (r) => r.status === 302, // Th∆∞·ªùng redirect sau khi login
    'Cookie session ƒë∆∞·ª£c thi·∫øt l·∫≠p': (r) => r.cookies.sessionid !== undefined,
  });

  return loggedInSuccess;
}

// H√†m t·∫°o header, th√¥ng minh h∆°n
function getBaseParams() {
  // Ch·ªçn m·ªôt profile tr√¨nh duy·ªát ng·∫´u nhi√™n cho m·ªói request
  const profile = BROWSER_PROFILES[Math.floor(Math.random() * BROWSER_PROFILES.length)];
  return {
    headers: profile,
  };
}
