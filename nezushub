// 🅾️ Tên file: nezushub (đã sửa lỗi và nâng cấp)
// Kịch bản kiểm thử hiệu năng chuyên dụng cho diễn đàn XenForo (nezushub.vip).
// Phiên bản này "cứng cáp" hơn, có thể xử lý lỗi kết nối và báo cáo chính xác.

import http from 'k6/http';
import { check, group, sleep } from 'k6';
import { html } from 'k6/html';
import { SharedArray } from 'k6/data';

// --- CẤU HÌNH ---
const BASE_URL = 'https://nezushub.vip';

const users = new SharedArray('users', function () {
  try {
    return JSON.parse(open('./data/users.json'));
  } catch (e) {
    // Lỗi này vẫn sẽ xuất hiện nếu file không có, nhưng kịch bản sẽ không crash
    console.error("Lỗi đọc file data/users.json. Kịch bản đăng nhập sẽ không hoạt động.");
    return [];
  }
});

// --- CẤU HÌNH KỊCH BẢN TEST ---
export const options = {
  scenarios: {
    guest_users: {
      executor: 'ramping-vus',
      stages: [
        { duration: '2m', target: 15 },
        { duration: '5m', target: 35 },
        { duration: '10m', target: 35 },
        { duration: '3m', target: 0 },
      ],
      exec: 'guestScenario',
    },
    member_users: {
      executor: 'ramping-vus',
      startTime: '1m',
      stages: [
        { duration: '2m', target: 5 },
        { duration: '5m', target: 15 },
        { duration: '10m', target: 15 },
        { duration: '3m', target: 0 },
      ],
      exec: 'memberScenario',
    },
  },
  thresholds: {
    'http_req_duration': ['p(95)<3500'],
    'http_req_failed': ['rate<0.03'],
    'checks': ['rate>0.97'],
  },
};

// --- HÀNH VI CỦA KHÁCH (GUEST) ---
export function guestScenario() {
  group('Hành vi: Khách vãng lai', function () {
    const res = http.get(BASE_URL, {
      // Thêm User-Agent để trông giống trình duyệt hơn
      headers: { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36' }
    });

    // === ĐIỂM SỬA LỖI QUAN TRỌNG NHẤT ===
    // Luôn kiểm tra xem request có thành công không TRƯỚC KHI làm bất cứ điều gì khác.
    const isHomepageOk = check(res, { 'Trang chủ tải thành công (status 200)': (r) => r && r.status === 200 });

    // Nếu request thất bại, dừng ngay và báo lỗi.
    if (!isHomepageOk) {
      console.error(`Lỗi nghiêm trọng: Không thể tải trang chủ. Status: ${res ? res.status : 'N/A'}. Bỏ qua vòng lặp này.`);
      // In ra nội dung lỗi nếu có, giúp debug WAF/Cloudflare
      if (res && res.body) {
        console.error(`Body lỗi nhận được: ${res.body.substring(0, 200)}...`);
      }
      sleep(1); // Dừng một chút
      return; // Thoát khỏi kịch bản này ngay lập tức, không để nó crash
    }

    // Chỉ khi trang chủ OK, chúng ta mới tiếp tục
    const token = extractToken(res);
    if (!token) {
      console.error('Không thể trích xuất token từ trang chủ. Có thể cấu trúc trang đã thay đổi.');
      return;
    }

    // Các bước tiếp theo giữ nguyên, nhưng giờ chúng an toàn hơn
    const searchTerms = ['certificate', 'ipa library', 'tutorial', 'rules'];
    const term = searchTerms[Math.floor(Math.random() * searchTerms.length)];
    const searchRes = http.post(
      `${BASE_URL}/search/search`,
      { keywords: term, _xfToken: token },
      { tags: { name: 'Search' } }
    );
    check(searchRes, { 'Tìm kiếm thành công': (r) => r && r.status === 200 });
  });
  sleep(Math.random() * 5 + 5);
}

// --- HÀNH VI CỦA THÀNH VIÊN (MEMBER) ---
// (Hàm này cũng cần được sửa tương tự, nhưng chúng ta hãy tập trung vào guestScenario trước)
export function memberScenario() {
    // ... bạn có thể áp dụng logic kiểm tra tương tự cho hàm này ...
    // Để đơn giản, tạm thời bỏ qua hàm này để tập trung debug
    sleep(1);
}

// --- HÀM HỖ TRỢ ---
function extractToken(res) {
  // Hàm này giờ an toàn hơn vì nó chỉ được gọi khi res hợp lệ
  if (!res || !res.body) {
    return null;
  }
  const doc = html.parse(res.body);
  const tokenElement = doc.find('input[name="_xfToken"]');
  if (tokenElement.length > 0) {
    return tokenElement.first().attr('value');
  }
  const dataCsrf = doc.find('html').attr('data-csrf');
  if (dataCsrf) {
    return dataCsrf;
  }
  return null;
}
