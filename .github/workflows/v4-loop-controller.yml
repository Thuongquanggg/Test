# ✅✅✅✅✅ controller.yml (Xóa không chờ)
name: Controller - Run v4 in Loop
on:
  workflow_dispatch:
    inputs:
      target_url_1:
        description: 'URL Mục Tiêu 1 (bắt buộc)'
        required: true
        default: 'https://certapple.com'
      target_url_2:
        description: 'URL Mục Tiêu 2 (tùy chọn)'
        required: false
        default: 'https://signiosapp.com'
      loop_wait_minutes:
        description: 'Số Phút Chờ Mỗi Vòng Lặp'
        required: true
        default: '15'
      runs_per_loop:
        description: 'Số Lần Chạy Con (v4.yml) Mỗi Vòng Lặp'
        required: true
        default: '2'
      max_vus_per_job:
        description: 'Số Người Dùng Ảo Tối Đa (VUs) Mỗi Job'
        required: true
        default: '500'
      child_run_duration:
        description: 'Thời gian chạy của mỗi job con (phút)'
        required: true
        default: '10'

jobs:
  loop-controller:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Control Loop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_URL_1: ${{ github.event.inputs.target_url_1 }}
          TARGET_URL_2: ${{ github.event.inputs.target_url_2 }}
          RUNS_PER_LOOP: ${{ github.event.inputs.runs_per_loop }}
          MAX_VUS: ${{ github.event.inputs.max_vus_per_job }}
          CHILD_DURATION: ${{ github.event.inputs.child_run_duration }}
          WAIT_MINUTES: ${{ github.event.inputs.loop_wait_minutes }}
        run: |
          LOOP_COUNT=0

          while true; do
            if [ $LOOP_COUNT -gt 0 ]; then
              echo "--- BẮT ĐẦU GIAI ĐOẠN DỌN DẸP ---"

              # 1. Dừng tất cả các runs đang chạy hoặc đang chờ
              echo ">> Bước 1/2: Tìm và dừng các runs đang hoạt động..."
              RUNNING_IDS=$(gh run list --status "in_progress,queued" --limit 100 --json databaseId --jq '.[].databaseId')
              
              if [ -n "$RUNNING_IDS" ]; then
                echo "$RUNNING_IDS" | while read -r id; do
                  echo "   - Gửi yêu cầu dừng cho run ID: $id"
                  gh run cancel "$id" || echo "   - Không thể dừng run $id, tiếp tục..."
                done
                echo ">> Đã gửi tất cả yêu cầu dừng."
              else
                echo ">> Không tìm thấy run nào đang hoạt động để dừng."
              fi

              # === THAY ĐỔI: ĐÃ XÓA BƯỚC CHỜ ===

              # 2. Xóa tất cả các runs đã hoàn thành (bao gồm cả những run vừa bị hủy NẾU KỊP CẬP NHẬT)
              echo ">> Bước 2/2: Tìm và xóa các runs đã hoàn thành/bị hủy..."
              COMPLETED_IDS=$(gh run list --status "completed,cancelled,failure,skipped" --limit 100 --json databaseId --jq '.[].databaseId')

              if [ -n "$COMPLETED_IDS" ]; then
                echo "$COMPLETED_IDS" | while read -r id; do
                  echo "   - Gửi yêu cầu xóa cho run ID: $id"
                  gh run delete "$id" || echo "   - Không thể xóa run $id, tiếp tục..."
                done
                echo ">> Đã gửi tất cả yêu cầu xóa."
              else
                echo ">> Không tìm thấy run nào đã hoàn thành để xóa."
              fi

              echo "--- KẾT THÚC GIAI ĐOẠN DỌN DẸP ---"
            fi

            echo "--- BẮT ĐẦU GIAI ĐOẠN KÍCH HOẠT (Vòng lặp số $LOOP_COUNT) ---"
            echo "Sẽ kích hoạt v4.yml ${RUNS_PER_LOOP} lần."

            for i in $(seq 1 $RUNS_PER_LOOP)
            do
              echo ">> Kích hoạt lần chạy con thứ $i/${RUNS_PER_LOOP}..."
              gh workflow run v4.yml \
                --ref ${{ github.ref_name }} \
                -f target_url_1="$TARGET_URL_1" \
                -f target_url_2="$TARGET_URL_2" \
                -f k6_max_vus="$MAX_VUS" \
                -f k6_duration="$CHILD_DURATION"
              
              echo ">> Đã kích hoạt. Chờ 2 giây trước khi tiếp tục..."
              sleep 2
            done

            LOOP_COUNT=$((LOOP_COUNT + 1))
            
            echo "--- KẾT THÚC GIAI ĐOẠN KÍCH HOẠT ---"
            echo "Đang chờ ${WAIT_MINUTES} phút trước khi bắt đầu vòng lặp tiếp theo (Vòng lặp số $LOOP_COUNT)..."
            sleep $((WAIT_MINUTES * 60))
          done
