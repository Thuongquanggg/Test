# ‚úÖ File: .github/workflows/SlowContro.yml
# WORKFLOW ƒêI·ªÄU KHI·ªÇN (K·∫æT H·ª¢P LOGIC C≈® V√Ä V√íNG L·∫∂P CH·ªú)

name: üîÑ ƒêi·ªÅu Khi·ªÉn V√≤ng L·∫∑p Slow (B·∫£n Ho√†n Thi·ªán)

on:
  workflow_dispatch:
    inputs:
      target_url:
        description: 'URL m·ª•c ti√™u cho c√°c l·∫ßn test'
        required: true
        default: 'https://certapple.com'
      wait_minutes:
        description: 'S·ªë ph√∫t ch·ªù tr∆∞·ªõc khi kh·ªüi ƒë·ªông l·∫°i'
        required: true
        default: '6'
      child_runs:
        description: 'S·ªë action con (Slow.yml) ƒë∆∞·ª£c kh·ªüi ch·∫°y trong m·ªói chu k·ª≥'
        required: true
        default: '5'

jobs:
  loop_controller:
    name: üîÑ V√≤ng L·∫∑p ƒêi·ªÅu Khi·ªÉn
    runs-on: ubuntu-latest
    
    permissions:
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: B·∫Øt ƒë·∫ßu v√≤ng l·∫∑p v√¥ t·∫≠n
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_URL: ${{ github.event.inputs.target_url }}
          WAIT_MINUTES: ${{ github.event.inputs.wait_minutes }}
          CHILD_RUNS: ${{ github.event.inputs.child_runs }}
        run: |
          set -e
          
          WAIT_SECONDS=$(($WAIT_MINUTES * 60))

          echo "B·∫Øt ƒë·∫ßu v√≤ng l·∫∑p ƒëi·ªÅu khi·ªÉn..."
          echo "URL m·ª•c ti√™u: $TARGET_URL"
          echo "S·ªë l·∫ßn ch·∫°y con m·ªói v√≤ng: $CHILD_RUNS"
          echo "Th·ªùi gian ch·ªù m·ªói v√≤ng: $WAIT_MINUTES ph√∫t ($WAIT_SECONDS gi√¢y)"

          while true; do
            echo "-----------------------------------------------------"
            echo "üöÄ B·∫Øt ƒë·∫ßu kh·ªüi ch·∫°y $CHILD_RUNS actions 'Ki·ªÉm Tra Web Slow'..."
            
            for i in $(seq 1 $CHILD_RUNS); do
              gh workflow run Slow.yml --ref ${{ github.ref }} -f target_url="$TARGET_URL"
              echo "-> ƒê√£ g·ª≠i y√™u c·∫ßu k√≠ch ho·∫°t l·∫ßn ch·∫°y th·ª© $i"
            done

            # THAY ƒê·ªîI L·ªöN: D√ôNG V√íNG L·∫∂P "H·ªéI V√Ä CH·ªú" ƒê·ªÇ L·∫§Y ID
            echo "üîç L·∫•y ID c·ªßa c√°c l·∫ßn ch·∫°y m·ªõi (th·ª≠ t·ªëi ƒëa 5 l·∫ßn)..."
            RUN_IDS=""
            for attempt in $(seq 1 5); do
              echo "Versuch $attempt..." # "L·∫ßn th·ª≠ $attempt..."
              # Ch·ªù m·ªôt ch√∫t tr∆∞·ªõc khi h·ªèi API
              sleep 10
              
              RUN_IDS=$(gh run list --workflow=Slow.yml --json databaseId,status,createdAt --limit $(($CHILD_RUNS + 5)) \
                --jq --argjson num_runs "$CHILD_RUNS" '[.[] | select(.status=="queued" or .status=="in_progress")] | sort_by(.createdAt) | reverse | .[0:$num_runs] | .[].databaseId' | tr '\n' ' ')

              if [ -n "$RUN_IDS" ]; then
                echo "‚úÖ L·∫•y ID th√†nh c√¥ng ·ªü l·∫ßn th·ª≠ th·ª© $attempt."
                break # Tho√°t kh·ªèi v√≤ng l·∫∑p khi ƒë√£ c√≥ ID
              else
                echo "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ID, ƒëang th·ª≠ l·∫°i sau 10 gi√¢y..."
              fi
            done
            
            if [ -z "$RUN_IDS" ]; then
                echo "‚ÄºÔ∏è L·ªói nghi√™m tr·ªçng: Sau 5 l·∫ßn th·ª≠ v·∫´n kh√¥ng l·∫•y ƒë∆∞·ª£c ID. S·∫Ω b·ªè qua chu k·ª≥ n√†y."
            else
                echo "‚úÖ ƒê√£ l·∫•y ƒë∆∞·ª£c danh s√°ch ID ƒë·ªÉ h·ªßy: $RUN_IDS"
            fi

            echo "‚è≥ Ch·ªù $WAIT_SECONDS gi√¢y ($WAIT_MINUTES ph√∫t)..."
            sleep $WAIT_SECONDS

            if [ -n "$RUN_IDS" ]; then
              echo "üõë Ng·ª´ng $CHILD_RUNS actions c≈©..."
              for id in $RUN_IDS; do
                echo "-> ƒêang g·ª≠i l·ªánh h·ªßy cho run ID: $id"
                gh run cancel $id || echo "L·ªói khi h·ªßy run ID $id (c√≥ th·ªÉ n√≥ ƒë√£ k·∫øt th√∫c)."
              done
              echo "‚úÖ ƒê√£ g·ª≠i l·ªánh h·ªßy."
            else
              echo "‚ÑπÔ∏è Kh√¥ng c√≥ ID n√†o ƒë·ªÉ h·ªßy trong chu k·ª≥ n√†y."
            fi
            
            echo "üîÑ Chu·∫©n b·ªã cho v√≤ng l·∫∑p ti·∫øp theo..."
          done
